# Datasource properties, i.e. postgres.
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=admin
# This will need to change for production and will need to manaully make ddls.
# See https://stackoverflow.com/questions/42135114/how-does-spring-jpa-hibernate-ddl-auto-property-exactly-work-in-spring
# spring.jpa.hibernate.ddl-auto=create-drop

# SQL Related properties.
# This needs to be set to run data.sql, not this is development feature. This will be removed in production.
spring.sql.init.mode=always
spring.sql.init.continue-on-error=false
spring.sql.init.schema-locations=classpath:/schema.sql
spring.sql.init.data-locations=classpath:/data.sql

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.generate-ddl=true
# By default data.sql script is run before hibernate is initialized
# spring.jpa.defer-datasource-initialization=true 
spring.jpa.hibernate.ddl-auto = update

spring.profiles.active = dev 
spring.docker.compose.profiles.active= dev

# Elastic search password
# Defaults are for local development
elastic.username=${ELASTIC_PROD_USER:elastic}
elastic.password=${ELASTIC_PROD_PASS:changeme}



# spring.datasource.url=jdbc:postgres:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=password
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.h2.console.enabled=true

# bookmarkit.app.domain=devfindfirst.dev
bookmarkit.app.domain=localhost

# App Properties
## Auth.
bookmarkit.app.jwtCookieName=bookmarkit
bookmarkit.app.jwtExpirationMs= 3600000
bookmarkit.app.jwtRefreshExpirationMs= 86400000

## For test
# bookmarkit.app.jwtExpirationMs= 15000
# bookmarkit.app.jwtRefreshExpirationMs= 120000
